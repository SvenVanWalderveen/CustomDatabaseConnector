<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ANN_CLASS_NO_ANNOTATION" xml:space="preserve">
    <value>.NET-class doesn't contain a CustomDatabaseClassAnnotation. Please add annotation</value>
  </data>
  <data name="ANN_CLASS_NO_COLUMNS" xml:space="preserve">
    <value>.NET-class doesn't contain properties with a CustomDatabaseColumnAnnotation. Make sure you have at least one property</value>
  </data>
  <data name="ANN_COLUMN_NO_ANNOTATION" xml:space="preserve">
    <value>.NET-column doesn't contain a CustomDatabaseColumnAnnotation. Please add annotation</value>
  </data>
  <data name="ANN_NO_CLASSNAME_INSERTED" xml:space="preserve">
    <value>TableName property is empty. Please set this property</value>
  </data>
  <data name="ANN_NO_COLUMNNAME_INSERTED" xml:space="preserve">
    <value>Columnname is empty. Please set columnname</value>
  </data>
  <data name="ANN_NO_PRIMARY_KEY" xml:space="preserve">
    <value>No primary key annotations found. Please define at least one primary key column</value>
  </data>
  <data name="DATATYPE_UNKNOWN" xml:space="preserve">
    <value>Datatype hasn't been defined in code. Please contact owner of this DLL</value>
  </data>
  <data name="DB_EMPTY_CONNECTIONSTRING" xml:space="preserve">
    <value>Connection string for DB is empty</value>
  </data>
  <data name="DB_NOT_INITIALIZED" xml:space="preserve">
    <value>Database hasn't been initialized</value>
  </data>
  <data name="MISMATCH" xml:space="preserve">
    <value>Mismatch between number of columns &amp; generated columns</value>
  </data>
  <data name="NO_DOTNET_PROPERTY_PASSED" xml:space="preserve">
    <value>No .NET-property is passed to method</value>
  </data>
  <data name="NO_OBJECTTYPE_PASSED" xml:space="preserve">
    <value>No objecttype is passed to method</value>
  </data>
  <data name="NO_OBJECT_PASSED" xml:space="preserve">
    <value>No object is passed to method</value>
  </data>
  <data name="SQL_EMPTY_PKEY" xml:space="preserve">
    <value>Primary key is empty</value>
  </data>
  <data name="SQL_EMPTY_STATEMENT" xml:space="preserve">
    <value>SQL-Statement is empty.</value>
  </data>
  <data name="SQL_FKEY_MULTIPLE_COLUMNS" xml:space="preserve">
    <value>Foreign key exists of multiple columns. Change referred table {0} to just one primary key</value>
  </data>
  <data name="SQL_NO_FKEY_FOUND" xml:space="preserve">
    <value>No foreign key found for table {0}</value>
  </data>
  <data name="SQL_NO_WHERE_CLAUSE" xml:space="preserve">
    <value>No where-clause.</value>
  </data>
</root>